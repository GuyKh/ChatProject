//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceHost.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ServerChatService.Service", ConfigurationName="ServiceReference1.IChatService", CallbackContract=typeof(ServiceHost.ServiceReference1.IChatServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ServerChatService.Service/IChatService/Subscribe", ReplyAction="http://ServerChatService.Service/IChatService/SubscribeResponse")]
        void Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ServerChatService.Service/IChatService/Subscribe", ReplyAction="http://ServerChatService.Service/IChatService/SubscribeResponse")]
        System.Threading.Tasks.Task SubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ServerChatService.Service/IChatService/Unsubscribe", ReplyAction="http://ServerChatService.Service/IChatService/UnsubscribeResponse")]
        void Unsubscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ServerChatService.Service/IChatService/Unsubscribe", ReplyAction="http://ServerChatService.Service/IChatService/UnsubscribeResponse")]
        System.Threading.Tasks.Task UnsubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ServerChatService.Service/IChatService/PublishMessage", ReplyAction="http://ServerChatService.Service/IChatService/PublishMessageResponse")]
        void PublishMessage(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ServerChatService.Service/IChatService/PublishMessage", ReplyAction="http://ServerChatService.Service/IChatService/PublishMessageResponse")]
        System.Threading.Tasks.Task PublishMessageAsync(string text);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ServerChatService.Service/IChatService/Subscribe", ReplyAction="http://ServerChatService.Service/IChatService/SubscribeResponse")]
        void Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ServerChatService.Service/IChatService/Unsubscribe", ReplyAction="http://ServerChatService.Service/IChatService/UnsubscribeResponse")]
        void Unsubscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ServerChatService.Service/IChatService/PublishMessage", ReplyAction="http://ServerChatService.Service/IChatService/PublishMessageResponse")]
        void PublishMessage(string text);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceChannel : ServiceHost.ServiceReference1.IChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.DuplexClientBase<ServiceHost.ServiceReference1.IChatService>, ServiceHost.ServiceReference1.IChatService {
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe() {
            base.Channel.Subscribe();
        }
        
        public System.Threading.Tasks.Task SubscribeAsync() {
            return base.Channel.SubscribeAsync();
        }
        
        public void Unsubscribe() {
            base.Channel.Unsubscribe();
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync() {
            return base.Channel.UnsubscribeAsync();
        }
        
        public void PublishMessage(string text) {
            base.Channel.PublishMessage(text);
        }
        
        public System.Threading.Tasks.Task PublishMessageAsync(string text) {
            return base.Channel.PublishMessageAsync(text);
        }
    }
}
